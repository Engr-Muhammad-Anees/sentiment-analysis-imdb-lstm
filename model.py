# -*- coding: utf-8 -*-
"""lstm(tweet_sentiment_analysis)_week06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PTrZUAAFbVRIWUo6attlMPNM1hIL-oax

**Built LSTM on sentiment analysis:**
"""

import numpy as np
import pandas as pd
import tensorflow as tf

dataset = tf.keras.datasets.imdb

# Load the dataset into train and test sets
(train_data, train_labels), (test_data, test_labels) = dataset.load_data(num_words=10000)

print(train_data.shape)
print(train_labels.shape)

train_sequences = tf.keras.preprocessing.sequence.pad_sequences(train_data, maxlen=256)
test_sequences = tf.keras.preprocessing.sequence.pad_sequences(test_data, maxlen=256)

train_labels = tf.keras.utils.to_categorical(train_labels, num_classes=256)

train_labels[0]

print(train_sequences.shape)
print(train_labels.shape)

model = tf.keras.models.Sequential(
   [
    tf.keras.layers.Embedding(10000, 128),
    tf.keras.layers.Dense(64, activation=tf.keras.activations.relu),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(1, activation = tf.keras.activations.sigmoid)
   ]
)

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(train_sequences, train_labels, epochs=5)

prediction = model.predict(test_sequences[0])
print(prediction)

print(test_labels[0])

model.save('/content/drive/MyDrive/Save model IT wing/lstm-sentiment-analysis-imbd')